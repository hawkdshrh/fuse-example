<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.redhat.dhawkins</groupId>
    <artifactId>camel-cxfrs-validation-ordered-interceptor</artifactId>
    <packaging>bundle</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>Camel-CXFRS-Interceptor-Ordered</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>
        <version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
        <skipTests>true</skipTests>

        <!-- the version of the BOM, defining all the dependency versions -->
        <fabric8.bom.version>1.2.0.redhat-630343</fabric8.bom.version>
        <fabric.version>1.2.0.redhat-630343</fabric.version>

        <!-- fabric8 deploy profile configuration -->
        <fabric8.profile>redhat-cxfrs-json-validation</fabric8.profile>
        <fabric8.parentProfiles>feature-cxf feature-camel</fabric8.parentProfiles>
        <fabric8.features>fabric-cxf cxf-jaxws camel-cxf</fabric8.features>
        <fabric8.bundles>
            mvn:com.google.guava/guava/16.0.1
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.rhino/1.7R2_3
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jopt-simple/4.3_1 
            mvn:joda-time/joda-time/2.5
            wrap:mvn:com.googlecode.libphonenumber/libphonenumber/6.2.2 
            mvn:com.redhat.gss.example/fge.wrapper/1.0.0
            mvn:${project.groupId}/${project.artifactId}/${project.version} 
        </fabric8.bundles>
    </properties>

    <repositories>
        <repository>
            <id>release.fusesource.org</id>
            <name>FuseSource Release Repository</name>
            <url>http://repo.fusesource.com/nexus/content/repositories/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>snapshot.fusesource.org</id>
            <name>FuseSource Snapshot Repository</name>
            <url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>release.fusesource.org</id>
            <name>FuseSource Release Repository</name>
            <url>http://repo.fusesource.com/nexus/content/repositories/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
        <pluginRepository>
            <id>snapshot.fusesource.org</id>
            <name>FuseSource Snapshot Repository</name>
            <url>http://repo.fusesource.com/nexus/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>  
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>io.fabric8.bom</groupId>
                <artifactId>fabric8-bom</artifactId>
                <version>${fabric8.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- assuming camel is pulling aries 1.0.0, pull asm 4.0 first -->
            <!-- this is needed when unit testing camel-cxf with camel-test-blueprint -->
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-all</artifactId>
                <version>4.0</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-blueprint</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <!-- cxf using slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <type>jar</type>
        </dependency>
        
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-client</artifactId>
            <version>1.2.0.redhat-621169</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>com.redhat.gss.example</groupId>
            <artifactId>fge.wrapper</artifactId>
            <version>1.0.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.mozilla</groupId>
            <artifactId>rhino</artifactId>
            <version>1.7R4</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>6.2.2</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>4.6</version>
            <scope>provided</scope>
        </dependency>
        
    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <plugins>
            <!-- Skip Test by default and enable them only in Test profile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>schemagen</id>
                        <goals>
                            <goal>schemagen</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->
      
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- to generate the MANIFEST-FILE of the bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${version.maven-bundle-plugin}</version>
                <extensions>true</extensions>
            </plugin>

            <!-- to run the example using mvn camel:run -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>2.15.1.redhat-621169</version>
                <configuration>
                    <useBlueprint>true</useBlueprint>
                </configuration>
            </plugin>
            
            <plugin>
                <!--
                  this plugin will use the fabric.* properties to configure its behaviour
                  see the Properties section here: http://fabric8.io/gitbook/mavenPlugin.html
                -->
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric.version}</version>
            </plugin>

        </plugins>
    </build>

</project>
